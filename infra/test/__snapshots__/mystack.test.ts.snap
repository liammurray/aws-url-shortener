// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API stack API stack matches snapshot 1`] = `
Object {
  "Outputs": Object {
    "ApiId": Object {
      "Value": Object {
        "Ref": "UrlsApiA1FCDDE7",
      },
    },
    "ApiUrl": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "UrlsApiA1FCDDE7",
            },
            ".execute-api.us-west-2.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "UrlsApiDeploymentStagedev57F5EC06",
            },
            "/",
          ],
        ],
      },
    },
    "DomainName": Object {
      "Value": Object {
        "Ref": "aRecord97A4C4DC",
      },
    },
    "UrlFuncId": Object {
      "Value": Object {
        "Ref": "UrlFuncA5F2E011",
      },
    },
    "UrlsApiEndpoint46D6A67E": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "UrlsApiA1FCDDE7",
            },
            ".execute-api.us-west-2.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "UrlsApiDeploymentStagedev57F5EC06",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParametersaf1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ecArtifactHash9DD6A97B": Object {
      "Description": "Artifact hash for asset \\"af1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ec\\"",
      "Type": "String",
    },
    "AssetParametersaf1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ecS3Bucket8D30CF2C": Object {
      "Description": "S3 bucket for asset \\"af1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ec\\"",
      "Type": "String",
    },
    "AssetParametersaf1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ecS3VersionKey8CA6F46C": Object {
      "Description": "S3 key for asset version \\"af1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ec\\"",
      "Type": "String",
    },
    "AssetParametersceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40aArtifactHashEDC522F0": Object {
      "Description": "Artifact hash for asset \\"ceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40a\\"",
      "Type": "String",
    },
    "AssetParametersceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40aS3BucketB030C8A8": Object {
      "Description": "S3 bucket for asset \\"ceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40a\\"",
      "Type": "String",
    },
    "AssetParametersceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40aS3VersionKey6A2AABD7": Object {
      "Description": "S3 key for asset version \\"ceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40a\\"",
      "Type": "String",
    },
    "CommitInfo": Object {
      "Default": "",
      "Description": "Commit info from CI",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40aS3BucketB030C8A8",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40aS3VersionKey6A2AABD7",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersceefd938ac7ea929077f2e2f4cf09b5034ebdd14799216b1281f4b28427da40aS3VersionKey6A2AABD7",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs10.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "UrlFuncA5F2E011": Object {
      "DependsOn": Array [
        "UrlFuncServiceRoleDefaultPolicy2287CA8A",
        "UrlFuncServiceRole1894FFAA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersaf1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ecS3Bucket8D30CF2C",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersaf1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ecS3VersionKey8CA6F46C",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersaf1ee0b7a6fd0168f145d64a5cc61287578bafc6c9f61f2ef2a417ed20d543ecS3VersionKey8CA6F46C",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "LOCAL_DDB_ENDPOINT": "http://host.docker.internal:8000",
            "SERVICE_NAME": "UrlShortener",
            "TABLE_NAME_URL_ENTRIES": Object {
              "Ref": "urlsC3A4DD87",
            },
          },
        },
        "Handler": "index.urlHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "UrlFuncServiceRole1894FFAA",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "UrlFuncLogRetention5F413E2F": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "UrlFuncA5F2E011",
              },
            ],
          ],
        },
        "RetentionInDays": 5,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "UrlFuncServiceRole1894FFAA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UrlFuncServiceRoleDefaultPolicy2287CA8A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "urlsC3A4DD87",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "UrlFuncServiceRoleDefaultPolicy2287CA8A",
        "Roles": Array [
          Object {
            "Ref": "UrlFuncServiceRole1894FFAA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "UrlsApiA1FCDDE7": Object {
      "Properties": Object {
        "Description": "Generates and serves shortened URL aliases.",
        "Name": "Url Shortener Service",
        "Tags": Array [
          Object {
            "Key": "CommitInfo",
            "Value": Object {
              "Ref": "CommitInfo",
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "UrlsApiAccount23201283": Object {
      "DependsOn": Array [
        "UrlsApiA1FCDDE7",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "UrlsApiCloudWatchRole597B1946",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "UrlsApiCloudWatchRole597B1946": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "CommitInfo",
            "Value": Object {
              "Ref": "CommitInfo",
            },
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "UrlsApiCustomDomain7737E7B8": Object {
      "Properties": Object {
        "DomainName": "u.domain",
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "RegionalCertificateArn": "arn:aws:acm:us-west-2:12345:certificate/cert",
        "Tags": Array [
          Object {
            "Key": "CommitInfo",
            "Value": Object {
              "Ref": "CommitInfo",
            },
          },
        ],
      },
      "Type": "AWS::ApiGateway::DomainName",
    },
    "UrlsApiCustomDomainMapurlsapidevUrlsApiF2F519F90A96E838": Object {
      "Properties": Object {
        "DomainName": Object {
          "Ref": "UrlsApiCustomDomain7737E7B8",
        },
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
        "Stage": Object {
          "Ref": "UrlsApiDeploymentStagedev57F5EC06",
        },
      },
      "Type": "AWS::ApiGateway::BasePathMapping",
    },
    "UrlsApiDeployment1D29DB81c9b7465fe7e254deffa5d3c475d021bd": Object {
      "DependsOn": Array [
        "UrlsApishortIdGETAA4D191E",
        "UrlsApishortIdOPTIONSCEA9F30E",
        "UrlsApishortIdC28B34D2",
        "UrlsApiOPTIONSF0F6EA1B",
        "UrlsApiPOSTC4C25A1E",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "UrlsApiDeploymentStagedev57F5EC06": Object {
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "UrlsApiDeployment1D29DB81c9b7465fe7e254deffa5d3c475d021bd",
        },
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
        "StageName": "dev",
        "Tags": Array [
          Object {
            "Key": "CommitInfo",
            "Value": Object {
              "Ref": "CommitInfo",
            },
          },
        ],
        "TracingEnabled": false,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "UrlsApiOPTIONSF0F6EA1B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": Object {
            "application/json": "{\\"statusCode\\": 200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "UrlsApiA1FCDDE7",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "UrlsApiPOSTApiPermissionTesturlsapidevUrlsApiF2F519F9POST7C5B0EFA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UrlFuncA5F2E011",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:12345:",
              Object {
                "Ref": "UrlsApiA1FCDDE7",
              },
              "/test-invoke-stage/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UrlsApiPOSTApiPermissionurlsapidevUrlsApiF2F519F9POSTBEA89947": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UrlFuncA5F2E011",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:12345:",
              Object {
                "Ref": "UrlsApiA1FCDDE7",
              },
              "/",
              Object {
                "Ref": "UrlsApiDeploymentStagedev57F5EC06",
              },
              "/POST/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UrlsApiPOSTC4C25A1E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "UrlFuncA5F2E011",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "UrlsApiA1FCDDE7",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "UrlsApishortIdC28B34D2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "UrlsApiA1FCDDE7",
            "RootResourceId",
          ],
        },
        "PathPart": "{shortId}",
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "UrlsApishortIdGETAA4D191E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "UrlFuncA5F2E011",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "UrlsApishortIdC28B34D2",
        },
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "UrlsApishortIdGETApiPermissionTesturlsapidevUrlsApiF2F519F9GETshortIdAD489B13": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UrlFuncA5F2E011",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:12345:",
              Object {
                "Ref": "UrlsApiA1FCDDE7",
              },
              "/test-invoke-stage/GET/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UrlsApishortIdGETApiPermissionurlsapidevUrlsApiF2F519F9GETshortId397CD42B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "UrlFuncA5F2E011",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-west-2:12345:",
              Object {
                "Ref": "UrlsApiA1FCDDE7",
              },
              "/",
              Object {
                "Ref": "UrlsApiDeploymentStagedev57F5EC06",
              },
              "/GET/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "UrlsApishortIdOPTIONSCEA9F30E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'false'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "NEVER",
          "RequestTemplates": Object {
            "application/json": "{\\"statusCode\\": 200}",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "200",
          },
        ],
        "ResourceId": Object {
          "Ref": "UrlsApishortIdC28B34D2",
        },
        "RestApiId": Object {
          "Ref": "UrlsApiA1FCDDE7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "aRecord97A4C4DC": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "UrlsApiCustomDomain7737E7B8",
              "RegionalDomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::GetAtt": Array [
              "UrlsApiCustomDomain7737E7B8",
              "RegionalHostedZoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "u.domain.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "urlsC3A4DD87": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "id",
            "AttributeType": "N",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "TableName": "UrlEntries-dev",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
